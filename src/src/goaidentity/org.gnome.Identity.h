/*
 * Generated by gdbus-codegen 2.54.3. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __ORG_GNOME_IDENTITY_H__
#define __ORG_GNOME_IDENTITY_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.gnome.Identity.Manager */

#define GOA_IDENTITY_SERVICE_TYPE_MANAGER (goa_identity_service_manager_get_type ())
#define GOA_IDENTITY_SERVICE_MANAGER(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GOA_IDENTITY_SERVICE_TYPE_MANAGER, GoaIdentityServiceManager))
#define GOA_IDENTITY_SERVICE_IS_MANAGER(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GOA_IDENTITY_SERVICE_TYPE_MANAGER))
#define GOA_IDENTITY_SERVICE_MANAGER_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), GOA_IDENTITY_SERVICE_TYPE_MANAGER, GoaIdentityServiceManagerIface))

struct _GoaIdentityServiceManager;
typedef struct _GoaIdentityServiceManager GoaIdentityServiceManager;
typedef struct _GoaIdentityServiceManagerIface GoaIdentityServiceManagerIface;

struct _GoaIdentityServiceManagerIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_exchange_secret_keys) (
    GoaIdentityServiceManager *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_identifier,
    const gchar *arg_input_key);

  gboolean (*handle_sign_in) (
    GoaIdentityServiceManager *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_identifier,
    GVariant *arg_details);

  gboolean (*handle_sign_out) (
    GoaIdentityServiceManager *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_identity);

};

GType goa_identity_service_manager_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *goa_identity_service_manager_interface_info (void);
guint goa_identity_service_manager_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void goa_identity_service_manager_complete_exchange_secret_keys (
    GoaIdentityServiceManager *object,
    GDBusMethodInvocation *invocation,
    const gchar *output_key);

void goa_identity_service_manager_complete_sign_in (
    GoaIdentityServiceManager *object,
    GDBusMethodInvocation *invocation,
    const gchar *identity_object_path);

void goa_identity_service_manager_complete_sign_out (
    GoaIdentityServiceManager *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void goa_identity_service_manager_call_exchange_secret_keys (
    GoaIdentityServiceManager *proxy,
    const gchar *arg_identifier,
    const gchar *arg_input_key,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean goa_identity_service_manager_call_exchange_secret_keys_finish (
    GoaIdentityServiceManager *proxy,
    gchar **out_output_key,
    GAsyncResult *res,
    GError **error);

gboolean goa_identity_service_manager_call_exchange_secret_keys_sync (
    GoaIdentityServiceManager *proxy,
    const gchar *arg_identifier,
    const gchar *arg_input_key,
    gchar **out_output_key,
    GCancellable *cancellable,
    GError **error);

void goa_identity_service_manager_call_sign_in (
    GoaIdentityServiceManager *proxy,
    const gchar *arg_identifier,
    GVariant *arg_details,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean goa_identity_service_manager_call_sign_in_finish (
    GoaIdentityServiceManager *proxy,
    gchar **out_identity_object_path,
    GAsyncResult *res,
    GError **error);

gboolean goa_identity_service_manager_call_sign_in_sync (
    GoaIdentityServiceManager *proxy,
    const gchar *arg_identifier,
    GVariant *arg_details,
    gchar **out_identity_object_path,
    GCancellable *cancellable,
    GError **error);

void goa_identity_service_manager_call_sign_out (
    GoaIdentityServiceManager *proxy,
    const gchar *arg_identity,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean goa_identity_service_manager_call_sign_out_finish (
    GoaIdentityServiceManager *proxy,
    GAsyncResult *res,
    GError **error);

gboolean goa_identity_service_manager_call_sign_out_sync (
    GoaIdentityServiceManager *proxy,
    const gchar *arg_identity,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define GOA_IDENTITY_SERVICE_TYPE_MANAGER_PROXY (goa_identity_service_manager_proxy_get_type ())
#define GOA_IDENTITY_SERVICE_MANAGER_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GOA_IDENTITY_SERVICE_TYPE_MANAGER_PROXY, GoaIdentityServiceManagerProxy))
#define GOA_IDENTITY_SERVICE_MANAGER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GOA_IDENTITY_SERVICE_TYPE_MANAGER_PROXY, GoaIdentityServiceManagerProxyClass))
#define GOA_IDENTITY_SERVICE_MANAGER_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GOA_IDENTITY_SERVICE_TYPE_MANAGER_PROXY, GoaIdentityServiceManagerProxyClass))
#define GOA_IDENTITY_SERVICE_IS_MANAGER_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GOA_IDENTITY_SERVICE_TYPE_MANAGER_PROXY))
#define GOA_IDENTITY_SERVICE_IS_MANAGER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GOA_IDENTITY_SERVICE_TYPE_MANAGER_PROXY))

typedef struct _GoaIdentityServiceManagerProxy GoaIdentityServiceManagerProxy;
typedef struct _GoaIdentityServiceManagerProxyClass GoaIdentityServiceManagerProxyClass;
typedef struct _GoaIdentityServiceManagerProxyPrivate GoaIdentityServiceManagerProxyPrivate;

struct _GoaIdentityServiceManagerProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  GoaIdentityServiceManagerProxyPrivate *priv;
};

struct _GoaIdentityServiceManagerProxyClass
{
  GDBusProxyClass parent_class;
};

GType goa_identity_service_manager_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GoaIdentityServiceManagerProxy, g_object_unref)
#endif

void goa_identity_service_manager_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GoaIdentityServiceManager *goa_identity_service_manager_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
GoaIdentityServiceManager *goa_identity_service_manager_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void goa_identity_service_manager_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GoaIdentityServiceManager *goa_identity_service_manager_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
GoaIdentityServiceManager *goa_identity_service_manager_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define GOA_IDENTITY_SERVICE_TYPE_MANAGER_SKELETON (goa_identity_service_manager_skeleton_get_type ())
#define GOA_IDENTITY_SERVICE_MANAGER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GOA_IDENTITY_SERVICE_TYPE_MANAGER_SKELETON, GoaIdentityServiceManagerSkeleton))
#define GOA_IDENTITY_SERVICE_MANAGER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GOA_IDENTITY_SERVICE_TYPE_MANAGER_SKELETON, GoaIdentityServiceManagerSkeletonClass))
#define GOA_IDENTITY_SERVICE_MANAGER_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GOA_IDENTITY_SERVICE_TYPE_MANAGER_SKELETON, GoaIdentityServiceManagerSkeletonClass))
#define GOA_IDENTITY_SERVICE_IS_MANAGER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GOA_IDENTITY_SERVICE_TYPE_MANAGER_SKELETON))
#define GOA_IDENTITY_SERVICE_IS_MANAGER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GOA_IDENTITY_SERVICE_TYPE_MANAGER_SKELETON))

typedef struct _GoaIdentityServiceManagerSkeleton GoaIdentityServiceManagerSkeleton;
typedef struct _GoaIdentityServiceManagerSkeletonClass GoaIdentityServiceManagerSkeletonClass;
typedef struct _GoaIdentityServiceManagerSkeletonPrivate GoaIdentityServiceManagerSkeletonPrivate;

struct _GoaIdentityServiceManagerSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  GoaIdentityServiceManagerSkeletonPrivate *priv;
};

struct _GoaIdentityServiceManagerSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType goa_identity_service_manager_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GoaIdentityServiceManagerSkeleton, g_object_unref)
#endif

GoaIdentityServiceManager *goa_identity_service_manager_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for org.gnome.Identity */

#define GOA_IDENTITY_SERVICE_TYPE_IDENTITY (goa_identity_service_identity_get_type ())
#define GOA_IDENTITY_SERVICE_IDENTITY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GOA_IDENTITY_SERVICE_TYPE_IDENTITY, GoaIdentityServiceIdentity))
#define GOA_IDENTITY_SERVICE_IS_IDENTITY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GOA_IDENTITY_SERVICE_TYPE_IDENTITY))
#define GOA_IDENTITY_SERVICE_IDENTITY_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), GOA_IDENTITY_SERVICE_TYPE_IDENTITY, GoaIdentityServiceIdentityIface))

struct _GoaIdentityServiceIdentity;
typedef struct _GoaIdentityServiceIdentity GoaIdentityServiceIdentity;
typedef struct _GoaIdentityServiceIdentityIface GoaIdentityServiceIdentityIface;

struct _GoaIdentityServiceIdentityIface
{
  GTypeInterface parent_iface;

  gint64  (*get_expiration_timestamp) (GoaIdentityServiceIdentity *object);

  const gchar * (*get_identifier) (GoaIdentityServiceIdentity *object);

  gboolean  (*get_is_signed_in) (GoaIdentityServiceIdentity *object);

};

GType goa_identity_service_identity_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *goa_identity_service_identity_interface_info (void);
guint goa_identity_service_identity_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus property accessors: */
const gchar *goa_identity_service_identity_get_identifier (GoaIdentityServiceIdentity *object);
gchar *goa_identity_service_identity_dup_identifier (GoaIdentityServiceIdentity *object);
void goa_identity_service_identity_set_identifier (GoaIdentityServiceIdentity *object, const gchar *value);

gint64 goa_identity_service_identity_get_expiration_timestamp (GoaIdentityServiceIdentity *object);
void goa_identity_service_identity_set_expiration_timestamp (GoaIdentityServiceIdentity *object, gint64 value);

gboolean goa_identity_service_identity_get_is_signed_in (GoaIdentityServiceIdentity *object);
void goa_identity_service_identity_set_is_signed_in (GoaIdentityServiceIdentity *object, gboolean value);


/* ---- */

#define GOA_IDENTITY_SERVICE_TYPE_IDENTITY_PROXY (goa_identity_service_identity_proxy_get_type ())
#define GOA_IDENTITY_SERVICE_IDENTITY_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GOA_IDENTITY_SERVICE_TYPE_IDENTITY_PROXY, GoaIdentityServiceIdentityProxy))
#define GOA_IDENTITY_SERVICE_IDENTITY_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GOA_IDENTITY_SERVICE_TYPE_IDENTITY_PROXY, GoaIdentityServiceIdentityProxyClass))
#define GOA_IDENTITY_SERVICE_IDENTITY_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GOA_IDENTITY_SERVICE_TYPE_IDENTITY_PROXY, GoaIdentityServiceIdentityProxyClass))
#define GOA_IDENTITY_SERVICE_IS_IDENTITY_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GOA_IDENTITY_SERVICE_TYPE_IDENTITY_PROXY))
#define GOA_IDENTITY_SERVICE_IS_IDENTITY_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GOA_IDENTITY_SERVICE_TYPE_IDENTITY_PROXY))

typedef struct _GoaIdentityServiceIdentityProxy GoaIdentityServiceIdentityProxy;
typedef struct _GoaIdentityServiceIdentityProxyClass GoaIdentityServiceIdentityProxyClass;
typedef struct _GoaIdentityServiceIdentityProxyPrivate GoaIdentityServiceIdentityProxyPrivate;

struct _GoaIdentityServiceIdentityProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  GoaIdentityServiceIdentityProxyPrivate *priv;
};

struct _GoaIdentityServiceIdentityProxyClass
{
  GDBusProxyClass parent_class;
};

GType goa_identity_service_identity_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GoaIdentityServiceIdentityProxy, g_object_unref)
#endif

void goa_identity_service_identity_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GoaIdentityServiceIdentity *goa_identity_service_identity_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
GoaIdentityServiceIdentity *goa_identity_service_identity_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void goa_identity_service_identity_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GoaIdentityServiceIdentity *goa_identity_service_identity_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
GoaIdentityServiceIdentity *goa_identity_service_identity_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define GOA_IDENTITY_SERVICE_TYPE_IDENTITY_SKELETON (goa_identity_service_identity_skeleton_get_type ())
#define GOA_IDENTITY_SERVICE_IDENTITY_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GOA_IDENTITY_SERVICE_TYPE_IDENTITY_SKELETON, GoaIdentityServiceIdentitySkeleton))
#define GOA_IDENTITY_SERVICE_IDENTITY_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GOA_IDENTITY_SERVICE_TYPE_IDENTITY_SKELETON, GoaIdentityServiceIdentitySkeletonClass))
#define GOA_IDENTITY_SERVICE_IDENTITY_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GOA_IDENTITY_SERVICE_TYPE_IDENTITY_SKELETON, GoaIdentityServiceIdentitySkeletonClass))
#define GOA_IDENTITY_SERVICE_IS_IDENTITY_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GOA_IDENTITY_SERVICE_TYPE_IDENTITY_SKELETON))
#define GOA_IDENTITY_SERVICE_IS_IDENTITY_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GOA_IDENTITY_SERVICE_TYPE_IDENTITY_SKELETON))

typedef struct _GoaIdentityServiceIdentitySkeleton GoaIdentityServiceIdentitySkeleton;
typedef struct _GoaIdentityServiceIdentitySkeletonClass GoaIdentityServiceIdentitySkeletonClass;
typedef struct _GoaIdentityServiceIdentitySkeletonPrivate GoaIdentityServiceIdentitySkeletonPrivate;

struct _GoaIdentityServiceIdentitySkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  GoaIdentityServiceIdentitySkeletonPrivate *priv;
};

struct _GoaIdentityServiceIdentitySkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType goa_identity_service_identity_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GoaIdentityServiceIdentitySkeleton, g_object_unref)
#endif

GoaIdentityServiceIdentity *goa_identity_service_identity_skeleton_new (void);


/* ---- */

#define GOA_IDENTITY_SERVICE_TYPE_OBJECT (goa_identity_service_object_get_type ())
#define GOA_IDENTITY_SERVICE_OBJECT(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GOA_IDENTITY_SERVICE_TYPE_OBJECT, GoaIdentityServiceObject))
#define GOA_IDENTITY_SERVICE_IS_OBJECT(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GOA_IDENTITY_SERVICE_TYPE_OBJECT))
#define GOA_IDENTITY_SERVICE_OBJECT_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), GOA_IDENTITY_SERVICE_TYPE_OBJECT, GoaIdentityServiceObject))

struct _GoaIdentityServiceObject;
typedef struct _GoaIdentityServiceObject GoaIdentityServiceObject;
typedef struct _GoaIdentityServiceObjectIface GoaIdentityServiceObjectIface;

struct _GoaIdentityServiceObjectIface
{
  GTypeInterface parent_iface;
};

GType goa_identity_service_object_get_type (void) G_GNUC_CONST;

GoaIdentityServiceManager *goa_identity_service_object_get_manager (GoaIdentityServiceObject *object);
GoaIdentityServiceIdentity *goa_identity_service_object_get_identity (GoaIdentityServiceObject *object);
GoaIdentityServiceManager *goa_identity_service_object_peek_manager (GoaIdentityServiceObject *object);
GoaIdentityServiceIdentity *goa_identity_service_object_peek_identity (GoaIdentityServiceObject *object);

#define GOA_IDENTITY_SERVICE_TYPE_OBJECT_PROXY (goa_identity_service_object_proxy_get_type ())
#define GOA_IDENTITY_SERVICE_OBJECT_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GOA_IDENTITY_SERVICE_TYPE_OBJECT_PROXY, GoaIdentityServiceObjectProxy))
#define GOA_IDENTITY_SERVICE_OBJECT_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GOA_IDENTITY_SERVICE_TYPE_OBJECT_PROXY, GoaIdentityServiceObjectProxyClass))
#define GOA_IDENTITY_SERVICE_OBJECT_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GOA_IDENTITY_SERVICE_TYPE_OBJECT_PROXY, GoaIdentityServiceObjectProxyClass))
#define GOA_IDENTITY_SERVICE_IS_OBJECT_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GOA_IDENTITY_SERVICE_TYPE_OBJECT_PROXY))
#define GOA_IDENTITY_SERVICE_IS_OBJECT_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GOA_IDENTITY_SERVICE_TYPE_OBJECT_PROXY))

typedef struct _GoaIdentityServiceObjectProxy GoaIdentityServiceObjectProxy;
typedef struct _GoaIdentityServiceObjectProxyClass GoaIdentityServiceObjectProxyClass;
typedef struct _GoaIdentityServiceObjectProxyPrivate GoaIdentityServiceObjectProxyPrivate;

struct _GoaIdentityServiceObjectProxy
{
  /*< private >*/
  GDBusObjectProxy parent_instance;
  GoaIdentityServiceObjectProxyPrivate *priv;
};

struct _GoaIdentityServiceObjectProxyClass
{
  GDBusObjectProxyClass parent_class;
};

GType goa_identity_service_object_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GoaIdentityServiceObjectProxy, g_object_unref)
#endif

GoaIdentityServiceObjectProxy *goa_identity_service_object_proxy_new (GDBusConnection *connection, const gchar *object_path);

#define GOA_IDENTITY_SERVICE_TYPE_OBJECT_SKELETON (goa_identity_service_object_skeleton_get_type ())
#define GOA_IDENTITY_SERVICE_OBJECT_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GOA_IDENTITY_SERVICE_TYPE_OBJECT_SKELETON, GoaIdentityServiceObjectSkeleton))
#define GOA_IDENTITY_SERVICE_OBJECT_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GOA_IDENTITY_SERVICE_TYPE_OBJECT_SKELETON, GoaIdentityServiceObjectSkeletonClass))
#define GOA_IDENTITY_SERVICE_OBJECT_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GOA_IDENTITY_SERVICE_TYPE_OBJECT_SKELETON, GoaIdentityServiceObjectSkeletonClass))
#define GOA_IDENTITY_SERVICE_IS_OBJECT_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GOA_IDENTITY_SERVICE_TYPE_OBJECT_SKELETON))
#define GOA_IDENTITY_SERVICE_IS_OBJECT_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GOA_IDENTITY_SERVICE_TYPE_OBJECT_SKELETON))

typedef struct _GoaIdentityServiceObjectSkeleton GoaIdentityServiceObjectSkeleton;
typedef struct _GoaIdentityServiceObjectSkeletonClass GoaIdentityServiceObjectSkeletonClass;
typedef struct _GoaIdentityServiceObjectSkeletonPrivate GoaIdentityServiceObjectSkeletonPrivate;

struct _GoaIdentityServiceObjectSkeleton
{
  /*< private >*/
  GDBusObjectSkeleton parent_instance;
  GoaIdentityServiceObjectSkeletonPrivate *priv;
};

struct _GoaIdentityServiceObjectSkeletonClass
{
  GDBusObjectSkeletonClass parent_class;
};

GType goa_identity_service_object_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GoaIdentityServiceObjectSkeleton, g_object_unref)
#endif

GoaIdentityServiceObjectSkeleton *goa_identity_service_object_skeleton_new (const gchar *object_path);
void goa_identity_service_object_skeleton_set_manager (GoaIdentityServiceObjectSkeleton *object, GoaIdentityServiceManager *interface_);
void goa_identity_service_object_skeleton_set_identity (GoaIdentityServiceObjectSkeleton *object, GoaIdentityServiceIdentity *interface_);

/* ---- */

#define GOA_IDENTITY_SERVICE_TYPE_OBJECT_MANAGER_CLIENT (goa_identity_service_object_manager_client_get_type ())
#define GOA_IDENTITY_SERVICE_OBJECT_MANAGER_CLIENT(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GOA_IDENTITY_SERVICE_TYPE_OBJECT_MANAGER_CLIENT, GoaIdentityServiceObjectManagerClient))
#define GOA_IDENTITY_SERVICE_OBJECT_MANAGER_CLIENT_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GOA_IDENTITY_SERVICE_TYPE_OBJECT_MANAGER_CLIENT, GoaIdentityServiceObjectManagerClientClass))
#define GOA_IDENTITY_SERVICE_OBJECT_MANAGER_CLIENT_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GOA_IDENTITY_SERVICE_TYPE_OBJECT_MANAGER_CLIENT, GoaIdentityServiceObjectManagerClientClass))
#define GOA_IDENTITY_SERVICE_IS_OBJECT_MANAGER_CLIENT(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GOA_IDENTITY_SERVICE_TYPE_OBJECT_MANAGER_CLIENT))
#define GOA_IDENTITY_SERVICE_IS_OBJECT_MANAGER_CLIENT_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GOA_IDENTITY_SERVICE_TYPE_OBJECT_MANAGER_CLIENT))

typedef struct _GoaIdentityServiceObjectManagerClient GoaIdentityServiceObjectManagerClient;
typedef struct _GoaIdentityServiceObjectManagerClientClass GoaIdentityServiceObjectManagerClientClass;
typedef struct _GoaIdentityServiceObjectManagerClientPrivate GoaIdentityServiceObjectManagerClientPrivate;

struct _GoaIdentityServiceObjectManagerClient
{
  /*< private >*/
  GDBusObjectManagerClient parent_instance;
  GoaIdentityServiceObjectManagerClientPrivate *priv;
};

struct _GoaIdentityServiceObjectManagerClientClass
{
  GDBusObjectManagerClientClass parent_class;
};

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GoaIdentityServiceObjectManagerClient, g_object_unref)
#endif

GType goa_identity_service_object_manager_client_get_type (void) G_GNUC_CONST;

GType goa_identity_service_object_manager_client_get_proxy_type (GDBusObjectManagerClient *manager, const gchar *object_path, const gchar *interface_name, gpointer user_data);

void goa_identity_service_object_manager_client_new (
    GDBusConnection        *connection,
    GDBusObjectManagerClientFlags  flags,
    const gchar            *name,
    const gchar            *object_path,
    GCancellable           *cancellable,
    GAsyncReadyCallback     callback,
    gpointer                user_data);
GDBusObjectManager *goa_identity_service_object_manager_client_new_finish (
    GAsyncResult        *res,
    GError             **error);
GDBusObjectManager *goa_identity_service_object_manager_client_new_sync (
    GDBusConnection        *connection,
    GDBusObjectManagerClientFlags  flags,
    const gchar            *name,
    const gchar            *object_path,
    GCancellable           *cancellable,
    GError                **error);

void goa_identity_service_object_manager_client_new_for_bus (
    GBusType                bus_type,
    GDBusObjectManagerClientFlags  flags,
    const gchar            *name,
    const gchar            *object_path,
    GCancellable           *cancellable,
    GAsyncReadyCallback     callback,
    gpointer                user_data);
GDBusObjectManager *goa_identity_service_object_manager_client_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
GDBusObjectManager *goa_identity_service_object_manager_client_new_for_bus_sync (
    GBusType                bus_type,
    GDBusObjectManagerClientFlags  flags,
    const gchar            *name,
    const gchar            *object_path,
    GCancellable           *cancellable,
    GError                **error);


G_END_DECLS

#endif /* __ORG_GNOME_IDENTITY_H__ */
